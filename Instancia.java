package ch.idsia.agents.controllers;

public class Instancia {

	/*String pos_6_6;
	String pos_6_7;
	String pos_6_8;
	String pos_6_9;
	String pos_6_10;
	String pos_6_11;
	String pos_6_12;
	String pos_7_6;
	String pos_7_7;
	String pos_7_8;
	String pos_7_9;
	String pos_7_10;
	String pos_7_11;
	String pos_7_12;
	String pos_8_6;
	String pos_8_7;
	String pos_8_8;
	String pos_8_9;
	String pos_8_10;
	String pos_8_11;
	String pos_8_12;
	String pos_9_6;
	String pos_9_7;
	String pos_9_8;
	String pos_9_9;
	String pos_9_10;
	String pos_9_11;
	String pos_9_12;
	String pos_10_6;
	String pos_10_7;
	String pos_10_8;
	String pos_10_9;
	String pos_10_10;
	String pos_10_11;
	String pos_10_12;
	String pos_11_6;
	String pos_11_7;
	String pos_11_8;
	String pos_11_9;
	String pos_11_10;
	String pos_11_11;
	String pos_11_12;
	String pos_12_6;
	String pos_12_7;
	String pos_12_8;
	String pos_12_9;
	String pos_12_10;
	String pos_12_11;
	String pos_12_12;*/
	int reward;
	boolean isMarioOnGround;
	boolean isMarioAbleToJump;
	boolean isMarioAbleToShoot;
	boolean isMarioCarrying;
	int ticks_in_air;
	int enemiesSectionA;
	int obstacleSectionA;
	int coinsSectionA;
	int enemiesSectionB;
	int coinsSectionB;
	int incrCoins_n12;
	int incrMode_n12;
	int incrDistance_n12;
	boolean action_left;
	boolean action_right;
	boolean action_down;
	boolean action_jump;
	boolean action_speed;
	boolean action_up;
	int pertenencia;
	float instEvaluation;

	public Instancia(String instanciaCompleta) {
		String[] atributos = instanciaCompleta.split(",");

		/*pos_6_6 = atributos[0];
		pos_6_7 = atributos[1];
		pos_6_8 = atributos[2];
		pos_6_9 = atributos[3];
		pos_6_10 = atributos[4];
		pos_6_11 = atributos[5];
		pos_6_12 = atributos[6];
		pos_7_6 = atributos[7];
		pos_7_7 = atributos[8];
		pos_7_8 = atributos[9];
		pos_7_9 = atributos[10];
		pos_7_10 = atributos[11];
		pos_7_11 = atributos[12];
		pos_7_12 = atributos[13];
		pos_8_6 = atributos[14];
		pos_8_7 = atributos[15];
		pos_8_8 = atributos[16];
		pos_8_9 = atributos[17];
		pos_8_10 = atributos[18];
		pos_8_11 = atributos[19];
		pos_8_12 = atributos[20];
		pos_9_6 = atributos[21];
		pos_9_7 = atributos[22];
		pos_9_8 = atributos[23];
		pos_9_9 = atributos[24];
		pos_9_10 = atributos[25];
		pos_9_11 = atributos[26];
		pos_9_12 = atributos[27];
		pos_10_6 = atributos[28];
		pos_10_7 = atributos[29];
		pos_10_8 = atributos[30];
		pos_10_9 = atributos[31];
		pos_10_10 = atributos[32];
		pos_10_11 = atributos[33];
		pos_10_12 = atributos[34];
		pos_11_6 = atributos[35];
		pos_11_7 = atributos[36];
		pos_11_8 = atributos[37];
		pos_11_9 = atributos[38];
		pos_11_10 = atributos[39];
		pos_11_11 = atributos[40];
		pos_11_12 = atributos[41];
		pos_12_6 = atributos[42];
		pos_12_7 = atributos[43];
		pos_12_8 = atributos[44];
		pos_12_9 = atributos[45];
		pos_12_10 = atributos[46];
		pos_12_11 = atributos[47];
		pos_12_12 = atributos[48];*/
		reward = Integer.parseInt(atributos[0]);
		isMarioOnGround = atributos[1].compareTo("1") == 0 ? true : false;
		isMarioAbleToJump = atributos[2].compareTo("1") == 0 ? true : false;
		isMarioAbleToShoot = atributos[3].compareTo("1") == 0 ? true : false;
		isMarioCarrying = atributos[4].compareTo("1") == 0 ? true : false;
		ticks_in_air = Integer.parseInt(atributos[5]);
		enemiesSectionA = Integer.parseInt(atributos[6]);
		obstacleSectionA = Integer.parseInt(atributos[7]);
		coinsSectionA = Integer.parseInt(atributos[8]);
		enemiesSectionB = Integer.parseInt(atributos[9]);
		coinsSectionB = Integer.parseInt(atributos[10]);
		incrCoins_n12 = Integer.parseInt(atributos[11]);
		incrMode_n12 = Integer.parseInt(atributos[12]);
		incrDistance_n12 = Integer.parseInt(atributos[13]);
		action_left = Boolean.parseBoolean(atributos[14]); //atributos[63].compareTo("1") == 1 ? true : false;
		action_right = Boolean.parseBoolean(atributos[15]); //atributos[64].compareTo("1") == 1 ? true : false;
		action_down = Boolean.parseBoolean(atributos[16]);
		action_jump = Boolean.parseBoolean(atributos[17]);
		action_speed = Boolean.parseBoolean(atributos[18]);
		action_up = Boolean.parseBoolean(atributos[19]);
		pertenencia = Integer.parseInt(atributos[20]);
		instEvaluation = Float.parseFloat(atributos[21]);
	}

}
